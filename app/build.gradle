apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "sk.oceliak.promo"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    sourceSets {
        androidTest.java.srcDirs = ['src/androidTest/java', 'src/sharedTest/java']
        test.java.srcDirs = ['src/test/java', 'src/sharedTest/java']
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    def suppVer = "23.4.0"
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:design:' + suppVer
    compile 'com.android.support:cardview-v7:' + suppVer
    compile('com.squareup.retrofit2:adapter-rxjava:2.0.2')
    {
        exclude module: 'retrofit'
        exclude module: 'okhttp'
        exclude module: 'rxjava'
    }
    compile 'com.google.dagger:dagger:2.4'
    apt 'com.hannesdorfmann.parcelableplease:processor:1.0.2'
    apt "com.google.guava:guava:19.0"
    apt 'com.google.dagger:dagger-compiler:2.4'
    // Because RxAndroid releases are few and far between, it is recommended you also

    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile('io.reactivex:rxandroid:1.2.0') {
        exclude module: 'rxjava'
    }
    //RxJava support

    //RecyclerView support
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.assertj:assertj-core:1.7.0'
    androidTestCompile 'com.android.support:design:' + suppVer
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile('com.google.dexmaker:dexmaker-mockito:1.2') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-web:2.2.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.5'
    testCompile 'org.robolectric:robolectric:3.0'
    compile 'net.hockeyapp.android:HockeySDK:3.5.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.hannesdorfmann.parcelableplease:annotation:1.0.2'
    compile 'io.reactivex:rxjava:1.1.5'
    compile 'com.annimon:stream:1.0.3'
    compile 'com.github.fabioCollini.mv2m:mv2mrx:0.4.6'
    compile 'com.github.fabioCollini.mv2m:mv2mrecycler:0.4.5'
    compile 'com.jakewharton.timber:timber:4.1.1'
}

def coverageSourceDirs = [
        'src/main/java',
        'src/gen'
]


task jacocoUnitTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BR.class',
                       '**/BuildConfig.class',
                       'it/cosenonjaviste/demomv2m/databinding/**/*.class',
                       'com/android/**/*.class',
                       'android/**/*.class',
                       '**/*ParcelablePlease.class',
                       'it/cosenonjaviste/demomv2m/ui/**/*.class',
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebugUnitTest.exec')
}

task mergeTestCodeCoverageResults(type: JacocoMerge) {
    description = 'Merge test code coverage results from junit and instrumentation test'
    destinationFile = file("build/outputs/code-coverage/merged-coverage.exec")
    doFirst { delete destinationFile }
    executionData = files('build/outputs/code-coverage/connected/coverage.ec', 'build/jacoco/testDebugUnitTest.exec')
}

task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generates Jacoco coverage reports"
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BR.class',
                       '**/BuildConfig.class',
                       'it/cosenonjaviste/demomv2m/databinding/**/*.class',
                       'com/android/**/*.class',
                       'android/**/*.class',
                       '**/*ParcelablePlease.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    additionalSourceDirs = files(coverageSourceDirs)
    executionData = files('build/outputs/code-coverage/connected/coverage.ec')
}

